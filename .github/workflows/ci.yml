name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run linting with ruff
      run: |
        ruff check .
    
    - name: Run type checking with mypy
      run: |
        mypy --ignore-missing-imports agent/ utils/ config/ || true
    
    - name: Run tests with pytest
      run: |
        pytest tests/ -v --tb=short
      env:
        # Test environment variables - use AWS to match local tests
        LLM_PROVIDER: aws
        LLM_CHOICE: claude-3-5-sonnet-20241022
        AWS_ACCESS_KEY_ID: AKIATEST123456789012
        AWS_SECRET_ACCESS_KEY: test-secret-key-with-40-characters-min-abc
        AWS_DEFAULT_REGION: us-east-1
        AWS_REGION: us-east-1
        OBSIDIAN_VAULT_PATH: /tmp/test-vault
        SEARXNG_BASE_URL: http://localhost:8080
        TODOIST_API_TOKEN: test-token
        YOUTUBE_API_KEY: test-key

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Check code formatting with black
      run: |
        black --check .
    
    - name: Run security scan with bandit
      run: |
        pip install bandit
        bandit -r . -f json || true